Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс) 
	Префикс = ОбменСервер.ПолучитьПрефиксНомера(); 
КонецПроцедуры 

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.Продажи.Записывать = Истина;	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.СтоимостьНоменклатуры.Записывать = Истина; 
	Движения.Управленческий.Записывать = Истина;
	
	//Создать менеджер временных таблиц. 
	МенеджерВТ = Новый МенеджерВременныхТаблиц; 
	
	#Область НоменклатураДокумента
	Запрос = Новый Запрос; 
	
	//Укажем, какой менеджер временных таблиц использует этот запрос 
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ; 	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОказаниеУслугиПереченьНоменклатуры.Номенклатура,
	|	ОказаниеУслугиПереченьНоменклатуры.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|   ОказаниеУслугиПереченьНоменклатуры.НаборСвойств, 
	|	СУММА(ОказаниеУслугиПереченьНоменклатуры.Количество) КАК КоличествоВДокументе,
	|	МАКСИМУМ(ОказаниеУслугиПереченьНоменклатуры.Сумма) КАК СуммаВДокументе
	|ПОМЕСТИТЬ НоменклатураДокумента
	|ИЗ
	|	Документ.ОказаниеУслуги.ПереченьНоменклатуры КАК ОказаниеУслугиПереченьНоменклатуры
	|ГДЕ
	|	ОказаниеУслугиПереченьНоменклатуры.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОказаниеУслугиПереченьНоменклатуры.Номенклатура,
	|	ОказаниеУслугиПереченьНоменклатуры.Номенклатура.ВидНоменклатуры, 
	|	ОказаниеУслугиПереченьНоменклатуры.НаборСвойств"; 
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	#КонецОбласти
	
	#Область ДвиженияДокумента
	Запрос2 = Новый Запрос; 
	Запрос2.МенеджерВременныхТаблиц = МенеджерВТ; 
	Запрос2.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураДокумента.Номенклатура,
	|	НоменклатураДокумента.ВидНоменклатуры,                
	|   НоменклатураДокумента.НаборСвойств, 
	|	НоменклатураДокумента.КоличествоВДокументе,
	|	НоменклатураДокумента.СуммаВДокументе,
	|	ЕСТЬNULL(СтоимостьНоменклатурыОстатки.СтоимостьОстаток, 0) КАК Стоимость,
	|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК Количество
	|ИЗ
	|	НоменклатураДокумента КАК НоменклатураДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНоменклатуры.Остатки(
	|				,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						НоменклатураДокумента.Номенклатура
	|					ИЗ
	|						НоменклатураДокумента)) КАК СтоимостьНоменклатурыОстатки
	|		ПО НоменклатураДокумента.Номенклатура = СтоимостьНоменклатурыОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						НоменклатураДокумента.Номенклатура
	|					ИЗ
	|						НоменклатураДокумента)) КАК ОстаткиНоменклатурыОстатки
	|		ПО НоменклатураДокумента.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура";
	
	
	//Установим необходимость блокировки данных в регистрах СтоимостьМатериалов и ОстаткиМатериалов. 
	Движения.СтоимостьНоменклатуры.БлокироватьДляИзменения = Истина; 
	Движения.ОстаткиНоменклатуры.БлокироватьДляИзменения = Истина; 


	//Запишем пустые наборы записей, чтобы читать остатки без учета данных в документе. 
	Движения.СтоимостьНоменклатуры.Записать(); 
	Движения.ОстаткиНоменклатуры.Записать(); 
	
	Результат = Запрос2.Выполнить(); 
		
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Количество = 0 Тогда 
			СтоимостьНоменклатуры = 0; 
		Иначе 
			СтоимостьНоменклатуры = ВыборкаДетальныеЗаписи.Стоимость/ВыборкаДетальныеЗаписи.Количество; 
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.ИзготовленнаяПродукция Тогда
			
			// регистр ОстаткиНоменклатуры Расход
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.НаборСвойств = ВыборкаДетальныеЗаписи.НаборСвойств; 
			Движение.ОбъектПредприятия = ОбъектПредприятия;
			Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоВДокументе;    
			
			// регистр СтоимостьНоменклатуры Расход
			Движение = Движения.СтоимостьНоменклатуры.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Стоимость = ВыборкаДетальныеЗаписи.КоличествоВДокументе*СтоимостьНоменклатуры;
			
			 //регистр Управленческий 
			 //первая проводка: Д 62 (ДебиторскаяЗадолженность) - К 90 (Капитал) Розничная сумма Движение = Движения.Управленческий.Добавить();
			 Движение = Движения.Управленческий.Добавить();
			 Движение.СчетДт = ПланыСчетов.Основной.ДебиторскаяЗадолженность; 
			 Движение.СчетКт = ПланыСчетов.Основной.Капитал;
			 Движение.Период = Дата;
			 Движение.Сумма = ВыборкаДетальныеЗаписи.СуммаВДокументе; 
			 Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Покупатели] = Покупатель; 
			 
			 //вторая проводка: Д 90 (Капитал) - К 41 (Товары) - себестоимость Движение = Движе-ния.Управленческий.Добавить(); 
			 Движение = Движения.Управленческий.Добавить();
			 Движение.СчетДт = ПланыСчетов.Основной.Капитал;
			 Движение.СчетКт = ПланыСчетов.Основной.Товары; 
			 Движение.Период = Дата;
			 Движение.Сумма = СтоимостьНоменклатуры*ВыборкаДетальныеЗаписи.КоличествоВДокументе; 
			 Движение.КоличествоКт = ВыборкаДетальныеЗаписи.КоличествоВДокументе;
			 Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура]=ВыборкаДетальныеЗаписи.Номенклатура; 

		КонецЕсли;
		
		// регистр Продажи 
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		Движение.Покупатель = Покупатель;
		Движение.ТорговаяТочка = ОбъектПредприятия;
		Движение.Продавец = Продавец;
		Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоВДокументе;
		Движение.Выручка = ВыборкаДетальныеЗаписи.СуммаВДокументе;
		Движение.Стоимость = СтоимостьНоменклатуры * ВыборкаДетальныеЗаписи.КоличествоВДокументе;  
		
	КонецЦикла;
	Движения.Записать();
	#КонецОбласти
	
	#Область КонтрольОстатков
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда 
		//проверить отрицательные остатки. 
		Запрос3 = Новый Запрос; 
		Запрос3.МенеджерВременныхТаблиц = МенеджерВТ; 
		
		Запрос3.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			,
		|			Номенклатура В
		|					(ВЫБРАТЬ
		|						НоменклатураДокумента.Номенклатура
		|					ИЗ
		|						НоменклатураДокумента)
		|				И ОбъектПредприятия = &ОбъектПредприятия) КАК ОстаткиНоменклатурыОстатки
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток < 0";    
		
		Запрос3.УстановитьПараметр("ОбъектПредприятия", ОбъектПредприятия); 
		
		Результат = Запрос3.Выполнить(); 
		ВыборкаДетальныеЗаписи = Результат.Выбрать(); 
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			Сообщение = Новый СообщениеПользователю(); 
			Сообщение.Текст = "Не хватает" + Строка(- ВыборкаДетальныеЗаписи.КоличествоОстаток) + "единиц номенклатуры""" + ВыборкаДетальныеЗаписи.Номенклатура + """"; 
			Сообщение.Сообщить(); 
			Отказ = Истина; 
		КонецЦикла; 
		
	КонецЕсли;
	#КонецОбласти
	
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Контрагенты") Тогда
		// Заполнение шапки
		Покупатель = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

